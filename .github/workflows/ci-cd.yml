name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Run tests
        run: |
          pytest

  deploy:
    name: Deploy to EC2
    needs: test  # Only run if tests pass
    runs-on: ubuntu-latest
    # Only run on pushes to main branch (not on PRs)
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Deploy to EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          HOSTNAME: ${{ secrets.EC2_HOST }}
          USER_NAME: ${{ secrets.EC2_USERNAME }}
        
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 400 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} << 'EOF'
            # Create app directory if it doesn't exist
            mkdir -p ~/trading-api
            
            # Navigate to project directory
            cd ~/trading-api
            
            # Check if git repo is already initialized
            if [ ! -d .git ]; then
              git init
              git remote add origin https://github.com/mutuajames/blockhouse-test.git
            fi
            
            # Fetch latest code from main branch
            git fetch --all
            git reset --hard origin/main
            git pull origin main
            
            # Install dependencies
            pip install -r requirements.txt
            
            # If using Docker, build and run the container
            if [ -f Dockerfile ]; then
              docker build -t trading-api:latest .
              
              # Stop and remove any existing container
              docker stop trading-api-container || true
              docker rm trading-api-container || true
              
              # Run the new container
              docker run -d --name trading-api-container -p 8000:8000 trading-api:latest
            fi
            
            echo "Deployment completed successfully"
          EOF